{"remainingRequest":"C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\src\\components\\pintuan\\pp.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\src\\components\\pintuan\\pp.vue","mtime":1542283362811},{"path":"C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\ld\\uzou\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      placelist: [],\n      pageIndex: 0,\n      //属性显示当前页数\n      pageSize: 5,\n      //页大小\n      hasMore: true,\n      //是否存在下一页数据\n      pageCount: 2,\n      //总页数 \n      index: false,\n      loadState: true,\n      //是否显示底部加载状态\n      finish: false,\n      //是否正在加载完成\n      loading: false,\n      //是否正在加载中\n      domHeight: 0,\n      //内容可视区的高度\n      container: null //绑定能被监听滚动的元素\n\n    };\n  },\n  methods: {\n    getMore: function getMore() {\n      var _this = this;\n\n      this.pageIndex++;\n      this.hasMore = this.pageIndex <= this.pageCount;\n\n      if (!this.hasMore) {\n        return;\n      }\n\n      var url = \"http://127.0.0.1:3000/placelist\";\n      url += \"?pno=\" + this.pageIndex + \"&pageSize=\" + this.pageSize;\n      this.$http.get(url).then(function (result) {\n        //concat 接拼数组 将二个数组拼接新数组\n        var rows = _this.placelist.concat(result.body.data);\n\n        _this.placelist = rows; //保存总页数,动态赋值pageCount\n\n        _this.pageCount = result.body.pageCount; //console.log(result.body.data[0].fprice)\n\n        /*for(var i=0;i<result.length;i++){\n            console.log(result.body.data[i].fprice)\n            for(var j=0;j<=result[i].length;j++){\n                console.log(result[i][j])\n               // console.log(result[i][j].fprice)\n            }\n        }*/\n      });\n    },\n    choose: function choose() {\n      if (this.index == false) {\n        this.index = true;\n      } else {\n        this.index = false;\n      }\n    },\n    scrollPage: function scrollPage() {\n      var _this2 = this;\n\n      if (!this.$el) {\n        return;\n      } // 获取内容向上滚动了多少距离\n\n\n      var domScrollTop = this.container.scrollTop; // 当内容滚动到距离底部<50时,且没有加载完成&&没有正在加载中\n      // 内容距离底部多少距离 = 内容总高度-滚动高度-当前可视高度\n\n      if (this.$el.scrollHeight - domScrollTop - this.domHeight < 50 && !this.loading && !this.finish) {\n        // 设置为正在加载中\n        this.loading = true; // 0.5秒后执行父组件接口方法\n\n        setTimeout(function () {\n          _this2.$emit('loadMore');\n        }, 500);\n      }\n    },\n    switchBottom: function switchBottom() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        // 判断容器内容是否 大于 自身内容可视区域高度\n        if (_this3.$el.scrollHeight > _this3.domHeight) {\n          // 如果大于，则显示加载状态，至于是加载完成还是没有可以继续加载，我们不用关心，如果继续上滑有数据会执行方法的\n          _this3.showState = true;\n        } else {\n          // 如果页面不足一屏且还有下一页数据，继续执行加载更多方法\n          if (!_this3.finish) {\n            // 不足一屏，还有数据，现在加载状态\n            _this3.showState = true; // 执行父组件请求数据方法\n\n            setTimeout(function () {\n              _this3.$emit('loadMore');\n            }, 1000);\n          } else {\n            // 没有数据不显示底部加载状态\n            _this3.showState = false;\n          }\n        }\n      });\n    },\n    // 视图数据更新，重新调用\n    updated: function updated() {\n      this.switchBottom();\n    },\n    // 如果有用到keep-alive，组件激活时调用\n    activated: function activated() {\n      this.switchBottom();\n    },\n    bindSrcoll: function bindSrcoll() {\n      this.unScroll();\n\n      if (this.scrollContainer) {\n        this.container.addEventListener('scroll', this.scrollPage);\n      }\n    },\n    unScroll: function unScroll() {\n      if (this.scrollContainer) {\n        this.container.removeEventListener('scroll', this.scrollPage);\n      }\n    },\n    //页面销毁，移除滚动监听\n    beforeDestroy: function beforeDestroy() {\n      this.unScroll();\n    }\n  },\n  created: function created() {\n    this.getMore();\n  },\n  mounted: function mounted() {\n    // 如果组件是基于body或者其他父元素进行滚动，则下面获取的对象为相应的对象\n    this.container = this.$el;\n    this.domHeight = this.$el.clientHeight;\n    this.switchBottom();\n    this.bindSrcoll();\n  }\n};",{"version":3,"sources":["pp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-placelist load-more\">\r\n    <div v-for=\"item in placelist\" class=\"dd  load-state\" v-if=\"showState\" >\r\n        <div class=\"list finish\" v-if=\"finish\">\r\n            <img :src=\"item.pic\" alt=\"\">\r\n            <div class=\"intrb\">{{item.sale}}</div>\r\n        </div>\r\n        <div class=\"Price more\" v-else>\r\n            <p class=\"destail\">{{item.place}}</p>\r\n            <span class=\"C\">{{item.cprice}}</span>\r\n            <span class=\"F\">{{item.fprice}}</span>\r\n        </div>  \r\n    </div>\r\n    <mt-button type=\"primary\" size=\"large\" @click=\"getMore\">加载更多 </mt-button>\r\n    <div class=\"AllPlace\" v-show=\"index\">\r\n        <div class=\"choose\">\r\n          <span>目的地筛选</span>\r\n          <span class=\"x\" @click=\"choose\">关闭</span>\r\n        </div>\r\n        <div class=\"float\">\r\n           <div class=\"AllPlace_left\">\r\n               <ul>\r\n                   <li>欧洲</li>\r\n                   <li>北美洲</li>\r\n               </ul>\r\n           </div>\r\n           <div class=\"AllPlace_right\">\r\n              <mt-button  size=\"small\">美国</mt-button>\r\n              <mt-button  size=\"small\">法国</mt-button>\r\n              <mt-button  size=\"small\">瑞典</mt-button>\r\n              <mt-button  size=\"small\">意大利</mt-button>\r\n              <mt-button  size=\"small\">德国</mt-button>\r\n              <mt-button  size=\"small\">西班牙</mt-button>\r\n              <mt-button  size=\"small\">葡萄牙</mt-button>\r\n              <mt-button  size=\"small\">瑞士</mt-button>\r\n              <mt-button  size=\"small\">荷兰</mt-button>\r\n              <mt-button  size=\"small\">挪威</mt-button>\r\n              <mt-button  size=\"small\">丹麦</mt-button>\r\n              <mt-button  size=\"small\">奥地利</mt-button>\r\n              <mt-button  size=\"small\">比利时</mt-button>\r\n              <mt-button  size=\"small\">摩纳哥</mt-button>\r\n              <mt-button  size=\"small\">捷克</mt-button>\r\n              <mt-button  size=\"small\">卢森堡</mt-button>\r\n              <mt-button  size=\"small\">斯洛伐克</mt-button>\r\n              <mt-button  size=\"small\">匈牙利</mt-button>\r\n              <mt-button  size=\"small\">梵蒂冈</mt-button>\r\n              <mt-button  size=\"small\">安道尔</mt-button>\r\n           </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"choose c1\" @click=\"choose\">选择目的地国家</div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n     data(){\r\n       return {\r\n         placelist:[],\r\n         pageIndex:0,     //属性显示当前页数\r\n         pageSize:5,       //页大小\r\n         hasMore:true,     //是否存在下一页数据\r\n         pageCount:2,//总页数 \r\n         index:false,\r\n         loadState:true, //是否显示底部加载状态\r\n         finish:false,  //是否正在加载完成\r\n         loading:false, //是否正在加载中\r\n         domHeight:0, //内容可视区的高度\r\n         container:null //绑定能被监听滚动的元素\r\n       }\r\n     },\r\n     methods:{\r\n       getMore(){\r\n         this.pageIndex++;\r\n         this.hasMore = this.pageIndex <= this.pageCount;\r\n         if(!this.hasMore){return}\r\n        var url = \"http://127.0.0.1:3000/placelist\";\r\n        url+=\"?pno=\"+this.pageIndex+\"&pageSize=\"+this.pageSize;\r\n        this.$http.get(url).then(result=>{\r\n        //concat 接拼数组 将二个数组拼接新数组\r\n            var rows = this.placelist.concat(result.body.data);\r\n            this.placelist = rows;\r\n        //保存总页数,动态赋值pageCount\r\n            this.pageCount = result.body.pageCount\r\n            //console.log(result.body.data[0].fprice)\r\n            /*for(var i=0;i<result.length;i++){\r\n                console.log(result.body.data[i].fprice)\r\n                for(var j=0;j<=result[i].length;j++){\r\n                    console.log(result[i][j])\r\n                   // console.log(result[i][j].fprice)\r\n                }\r\n            }*/\r\n        })\r\n       },\r\n       choose(){\r\n           if(this.index==false){\r\n                this.index=true;\r\n           }else{\r\n               this.index=false\r\n           }    \r\n       },\r\n       scrollPage () {\r\n            if (!this.$el) {\r\n                return\r\n            }\r\n            // 获取内容向上滚动了多少距离\r\n            var domScrollTop = this.container.scrollTop\r\n            // 当内容滚动到距离底部<50时,且没有加载完成&&没有正在加载中\r\n            // 内容距离底部多少距离 = 内容总高度-滚动高度-当前可视高度\r\n            if (this.$el.scrollHeight - domScrollTop - this.domHeight < 50 && !this.loading && !this.finish) {\r\n            // 设置为正在加载中\r\n                this.loading = true\r\n                // 0.5秒后执行父组件接口方法\r\n                setTimeout(() => {\r\n                    this.$emit('loadMore')\r\n                }, 500)\r\n             }\r\n            },\r\n            switchBottom () {\r\n            this.$nextTick(() => {\r\n                // 判断容器内容是否 大于 自身内容可视区域高度\r\n                if (this.$el.scrollHeight > this.domHeight) {\r\n                    // 如果大于，则显示加载状态，至于是加载完成还是没有可以继续加载，我们不用关心，如果继续上滑有数据会执行方法的\r\n                    this.showState = true\r\n                } else {\r\n                // 如果页面不足一屏且还有下一页数据，继续执行加载更多方法\r\n                    if (!this.finish) {\r\n                        // 不足一屏，还有数据，现在加载状态\r\n                    this.showState = true\r\n                        // 执行父组件请求数据方法\r\n                    setTimeout(() => {\r\n                        this.$emit('loadMore')\r\n                    }, 1000)\r\n                } else {\r\n                    // 没有数据不显示底部加载状态\r\n                    this.showState = false\r\n                }\r\n                }\r\n            })\r\n           },\r\n           // 视图数据更新，重新调用\r\n            updated () {\r\n                this.switchBottom()\r\n            },\r\n            // 如果有用到keep-alive，组件激活时调用\r\n            activated () {\r\n            this.switchBottom()\r\n            },\r\n            bindSrcoll () {\r\n                this.unScroll()\r\n                if (this.scrollContainer) {\r\n                    this.container.addEventListener('scroll', this.scrollPage)\r\n                }\r\n            },\r\n                unScroll () {\r\n                if (this.scrollContainer) {\r\n                    this.container.removeEventListener('scroll', this.scrollPage)\r\n                }\r\n             },\r\n             //页面销毁，移除滚动监听\r\n                beforeDestroy () {\r\n                    this.unScroll()\r\n                }\r\n     },\r\n     created(){\r\n       this.getMore();\r\n     },\r\n     mounted () {\r\n    // 如果组件是基于body或者其他父元素进行滚动，则下面获取的对象为相应的对象\r\n    this.container = this.$el\r\n    this.domHeight = this.$el.clientHeight\r\n    this.switchBottom()\r\n    this.bindSrcoll()}\r\n}\r\n</script>\r\n<style>\r\n.app-placelist img{\r\n    width:120px;\r\n    height:90px;\r\n}\r\n.app-placelist>.dd>.list{\r\n    position:relative;\r\n}\r\n.dd{\r\n    position:relative;\r\n}\r\n.Price{\r\n    position:absolute;\r\n    top:10px;\r\n    left:125px;\r\n}\r\n.intrb{\r\n  width:32%;\r\n  height:25px;\r\n  position:absolute;\r\n  top:-45px;\r\n  background:linear-gradient(to top,black,gray,transparent);\r\n  color:white;\r\n  font-size:14px;\r\n  margin-top:110px;\r\n  padding:0px;\r\n  text-align:center;\r\n  line-height:25px;\r\n}\r\n.app-placelist>.dd>.Price>.destail{\r\n    font-size:14px;\r\n    color:#444444;    \r\n    margin-bottom:0;\r\n}\r\n.app-placelist>.dd>.Price>.C{\r\n    display:inline-block;\r\n    width:78px;\r\n    height:20px;\r\n    background:#FF5454;\r\n    text-align:center;\r\n    line-height:20px;\r\n    padding-top:1px;\r\n}\r\n.app-placelist>.dd>.Price>.F{\r\n    display:inline-block;\r\n    width:78px;\r\n    height:20px;\r\n    border:1px solid #FF5454;\r\n     text-align:center;\r\n    line-height:20px;\r\n}\r\n.app-placelist{\r\n    margin-bottom:60px;\r\n    margin-top:85px;\r\n}\r\n.app-placelist>.AllPlace{\r\n position:fixed;\r\n bottom:11%;\r\n}\r\n.app-placelist .choose{\r\n    width:100%;\r\n    height:40px;\r\n    background:#27292E;\r\n    text-align:center;\r\n    line-height:40px;\r\n    font-size:14px;\r\n    color:white;\r\n    \r\n}\r\n.c1{\r\n  position:fixed;\r\n bottom:7%;\r\n}\r\n.x{\r\n    float:right;\r\n    padding-right:10px;\r\n}\r\n.app-placelist>.AllPlace{\r\n    background:white;\r\n}\r\n.app-placelist>.AllPlace>.float>.AllPlace_left>ul{\r\n    background:white;\r\n    list-style:none;\r\n   margin-left:0px;\r\n    font-size:14px;\r\n}\r\n.app-placelist>.AllPlace>.float>.AllPlace_left>ul>li{\r\n    margin-bottom:2px;\r\n    font-size:16px;\r\n}\r\n.app-placelist>.AllPlace>.float>.AllPlace_right{\r\n  margin-left:113px;\r\n  margin-top:-70px;\r\n  height:195px;\r\n  overflow:auto;\r\n  background:white;\r\n  text-align:center;\r\n}\r\n.app-placelist>.mint-button{\r\n  \r\n}\r\n.app-placelist>.AllPlace>.float>.AllPlace_right>.mint-button{\r\n    margin:5px 5px;\r\n    width:70px;\r\n    height:35px;\r\n}\r\n.hide{\r\n    display:none;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\pintuan"}]}